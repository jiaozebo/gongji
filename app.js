const GJ = require('./gongji')
const fs = require('fs');
const path = require('path');
// var Iconv = require('iconv').Iconv;
// const Buffer = require('buffer');
const util = require("util")

var root = path.join(__dirname, 'public', 'log');
console.log("path root : " + root);
if (!fs.existsSync(root)) {
    fs.mkdir(root, function () { });
}
let logger = null;
if (process.env.NODE_ENV == 'development'){ logger = require('tracer').colorConsole();}else{ logger = require('tracer').dailyfile({root: root, maxLogFiles: 10});}


//const testB = Buffer.from([0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0x54,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x52,0x00,0x53,0x30,0x2D,0x45,0x31,0x31,0x2D,0x45,0x56,0x7C,0x7C,0xB1,0xA3,0xB4,0xE6,0xC4,0xA3,0xBF,0xE9,0x36,0x32,0x30,0x35,0x7C,0x31,0x23,0x41,0x4C,0x5F,0xD0,0xE9,0xC4,0xE2,0xC9,0xE8,0xB1,0xB8,0x7C,0x53,0x65,0x74,0x50,0x61,0x72,0x61,0x6D,0x20,0x64,0x65,0x6D,0x6F,0x20,0x65,0x76,0x65,0x6E,0x74,0x7C,0x33,0x7C,0x37,0x7C,0x32,0x30,0x30,0x39,0x2D,0x31,0x32,0x2D,0x30,0x32,0x20,0x30,0x39,0x3A,0x35,0x35,0x3A,0x31,0x32,0x7C]);
//let gj = new GJ(testB);

const IP = "192.168.111.200";
const PORT = 7000;
const gjManager = new GJ(IP, PORT);
const key_value = [];

gjManager.on('data', async (data)=>{
    let units = data.body.units;
    logger.info("recv gj data%j", data);
    const p = path.join(__dirname, 'key2puid.json');
    let str = await util.promisify(fs.readFile)(p,{});
    let json = JSON.parse(str);
    // logger.debug(json);
    for(var k in json){
        let value = units.find((unit)=>{
            return unit.key.indexOf(k) != -1;
        })
        if (value){
            key_value[k] = value.value;
            logger.info("find value :%s of key: %s", value.value, value.key);
        }
    }

});

logger.info("hhehehehe")